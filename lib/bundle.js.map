{"version":3,"sources":["webpack:///webpack/bootstrap 130ff8333f4a9cd0a78f","webpack:///./lib/bullet.js","webpack:///./lib/missile_defense.js","webpack:///./lib/game.js","webpack:///./lib/missile.js","webpack:///./lib/gunner.js","webpack:///./lib/city.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;AAIA;;AAEA;;;;;;;;;;ACrFA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;ACfD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7NA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC9EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 130ff8333f4a9cd0a78f","\n\nclass Bullet {\n  constructor(ctx, xPos, yPos, xEnd, yEnd){\n    this.xPos = xPos;\n    this.yPos= yPos;\n    this.xEnd = xEnd;\n    this.yEnd = yEnd;\n    this.angle = Math.atan2(yEnd - yPos, xEnd - xPos)\n    this.angle = this.angle + ((180 * Math.PI) / 180)\n    // this.angle = Math.atan2(yEnd - yPos, xEnd - xPos) * 180 / Math.PI;\n    console.log(this.angle)\n    // this.angle = this.originalAngle * Math.PI / 180\n    this.speed = 3;\n    this.radius = 3;\n    this.vx = Math.cos(this.angle) * this.speed;\n    this.vy = Math.sin(this.angle) * this.speed;\n    this.draw = this.draw.bind(this);\n    this.changePosition = this.changePosition.bind(this);\n    this.move = this.move.bind(this);\n    this.ctx = ctx;\n    this.collided = false;\n    this.exploded = false;\n  }\n\n  hasCollided() {\n    this.collided = true;\n  }\n\n  draw() {\n    // ctx.clearRect(this.xPos, this.yPos, 4, 10)\n    // this.ctx.fillStyle = this.color;\n    if (!this.collided && !this.exploded){\n      this.ctx.beginPath();\n      this.ctx.fillStyle = 'green';\n      this.ctx.arc(this.xPos,this.yPos, this.radius, 0, 2 * Math.PI)\n      this.ctx.fill();\n      this.ctx.stroke();\n      this.ctx.closePath();\n    } else if (this.exploded) {\n      this.radius = 20;\n      this.ctx.beginPath();\n      this.ctx.fillStyle = 'red';\n      this.ctx.arc(this.xPos,this.yPos, this.radius, 0, 2 * Math.PI)\n      this.ctx.fill();\n      this.ctx.stroke();\n      this.ctx.closePath();\n    }\n  }\n\n  exploded(){\n    this.exploded = true;\n  }\n\n  changePosition() {\n    this.yPos -= this.vy;\n    this.xPos -= this.vx;\n  }\n  \n\n  hasCollidedWith(otherObject){\n      let dx = this.xPos - otherObject.xPos;\n      let dy = this.yPos - otherObject.yPos;\n      let distance = Math.sqrt(dx * dx + dy * dy)\n\n      if (distance < this.radius + otherObject.radius){\n        return true\n      } else {\n        return false\n      }\n  }\n\n  move() {\n    if (!this.exploded) {\n      this.draw();\n      this.changePosition();\n    } else {\n      this.draw();\n    }\n  }\n\n\n\n}\n\nexport default Bullet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bullet.js\n// module id = 0\n// module chunks = 0","import Game from './game';\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // const modal = document.getElementsByClassName('start-screen')\n  const canvas = document.querySelector('canvas');\n  const ctx = canvas.getContext('2d');\n  const game = new Game(ctx, canvas);\n    document.addEventListener('keypress', (e) => {\n      debugger\n      $('.start-screen').hide();\n      game.play(ctx, canvas);\n    }) \n  // game.play();\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/missile_defense.js\n// module id = 1\n// module chunks = 0","import Bullet from './bullet'\nimport Missile from './missile';\nimport Gunner from './gunner';\nimport City from './city';\n\n\nclass Game {\n  constructor(ctx, canvas){\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.renderFrame = this.renderFrame.bind(this)\n    this.createMissiles = this.createMissiles.bind(this)\n    this.createCities = this.createCities.bind(this)\n    this.gameOver.bind(this);\n    this.missiles = this.createMissiles(5);\n    this.createCities();\n    this.gunner1 = new Gunner(300, 447, 10, this.ctx)\n    this.bullets = [];\n    this.checkCollision = this.checkCollision.bind(this)\n    this.explodedObjects = [];\n    setInterval(() =>{\n      this.explodedObjects = [];\n      console.log('clear explodedObjects')\n    }, 2000 )\n    this.click = this.click.bind(this);\n    this.triggerGun = this.triggerGun.bind(this);\n    this.click();\n    this.cityCount = 5 \n    this.gunnerLives = 3\n    this.missileCount = this.missiles.length\n    this.requestId;\n    this.gameFinished = false;\n  }\n\n\n  click(){\n    let that = this\n    var pos = [];\n    that.canvas.onclick = function(e) {\n      console.log('clicked')\n      let yEnd = e.offsetY\n      let xEnd = e.offsetX\n      that.triggerGun(xEnd, yEnd)\n    }\n  }\n\n  triggerGun(xEnd, yEnd){\n    let bullet = this.gunner1.shoot(xEnd, yEnd)\n    this.bullets.push(bullet);\n  }\n\n  // gameGunners(){\n  //   return [this.gunner1] //this.gunner2, this.gunner3]\n  // }\n\n  createMissiles(num){\n    this.missiles = [];\n    let speeds = [.5, .7, 1, 1.2, 1.5]\n    let angles = [ 65, 70, 80, 75, 73, 68, 85, 88, 90] //110, 105, 116, 111, 120]\n    let xPositions = [100, 150, 200, 250, 300, 400]// this.canvas.width/3, this.canvas.width/4.2]\n    for (let i = 0; i < num; i++){\n      let angle = angles[Math.floor(Math.random() * angles.length)];\n      let xPos = xPositions[Math.floor(Math.random() * xPositions.length)];\n      let speed = speeds[Math.floor(Math.random() * speeds.length)];\n      let missile = new Missile(this.ctx, xPos, angle, speed);\n      this.missiles.push(missile)\n    }\n    return this.missiles\n    // var missile = new Missile(this.ctx, 10, 90, 2)\n    // var missile1 = new Missile(this.ctx, 110, 90, 1.5)\n    // var missile2 = new Missile(this.ctx, 210, 90, 1.7)\n    // var missile3 = new Missile(this.ctx, 350, 90, 1.7)\n    // var missile4 = new Missile(this.ctx, 410, 90, 1.7)\n    // var missile5 = new Missile(this.ctx, 510, 90, 1.7)\n    // return this.missiles = [missile, missile1, missile2, missile3, missile4, missile5]\n  }\n\n  createCities(){\n    let city1 = new City(0,450,100,50,'yellow',this.ctx)\n    let city2 = new City(100,450,100,50,'blue',this.ctx)\n    let city3 = new City(200,450,100,50,'yellow',this.ctx)\n    let city4 = new City(300,450,100,50,'blue',this.ctx)\n    let city5 = new City(400,450,100,50,'yellow',this.ctx)\n    let city6 = new City(500,450,100,50,'blue',this.ctx)\n    return this.cities = [city1,city2, city3, city4, city5, city6]\n  }\n  \n  // clearObject(object){\n  //   let that = this\n  //   setTimeout(() => {\n  //     debugger\n  //     that.explodedObjects.splice(that.explodedObjects.indexOf(object))\n  //     console.log('oh yea')\n  //     debugger\n  //   }, 1000);\n  // }\n  \n  // checkExplosion(){\n  //   this.explodedObjects.forEach((object) => {\n  //     this.clearObject(object)\n  //   })\n  // }\n\n  checkCollision(){\n    let missiles = this.missiles\n    let explodedBullets = this.explodedObjects.filter((object) => object.constructor.name === 'Bullet')\n    let bullets = this.bullets.concat(explodedBullets)\n    for (let i = 0; i < missiles.length; i++) {\n      for (let j = 0; j < bullets.length; j++) {\n        const missile = missiles[i];\n        const bullet = bullets[j];\n        if (missile.hasCollidedWith(bullet)){\n          console.log('COLLIDE')\n          debugger\n          missile.exploded = true;\n          bullet.exploded = true;\n          this.explodedObjects.push(missile)\n          this.explodedObjects.push(bullet)\n          this.missileCount--;\n          missiles.splice(missiles.indexOf(missile),1)\n          bullets.splice(bullets.indexOf(bullet),1)\n          return\n        }\n      }\n    }\n    if (this.missiles.length === 0) return;\n    let missiles2 = this.missiles\n    let gunners = [this.gunner1]\n    for (let i = 0; i < missiles.length; i++) {\n      for (let j = 0; j < gunners.length; j++) {\n        const missile = missiles2[i];\n        const gunner = gunners[j];\n        if (missile.hasCollidedWith(gunner)){\n          console.log('COLLIDE')\n          missile.exploded = true;\n          gunner.exploded = true;\n          this.gunnerLives--;\n          this.missileCount--;\n          debugger\n          this.explodedObjects.push(missile)\n          this.explodedObjects.push(gunner)\n          missiles.splice(missiles2.indexOf(missile),1)\n        }\n      }\n    }\n    if (this.missiles.length === 0) return;\n    let missiles3 = this.missiles\n    let cities = this.cities\n    for (let i = 0; i < missiles3.length; i++) {\n      for (let j = 0; j < cities.length; j++) {\n        const missile = missiles3[i];\n        const city = cities[j];\n        if ( (missile.yPos > 450) && ( (missile.xPos >= city.xStart) && \n           (missile.xPos <= city.xStart + 100) ) ){\n          missile.exploded = true;\n          city.exploded = true;\n          this.missileCount--;\n          this.cityCount--;\n          this.explodedObjects.push(missile);\n          this.missiles.splice(this.missiles.indexOf(missile),1)\n          return\n        }\n      }\n     }\n    }\n\n  renderFrame() {\n    this.ctx.clearRect(0,0, 600, 500)\n    this.gunner1.draw()\n    this.bullets.forEach(bullet => {\n      if (bullet.xPos < 0 || bullet.xPos > 600 || bullet.yPos > 500 || bullet.yPos < 0  ){\n        this.bullets.splice(this.bullets.indexOf(bullet),1)\n      } else if (bullet.yPos <= bullet.yEnd){\n        bullet.exploded = true;\n        if (!this.explodedObjects.includes(bullet)) {\n          this.explodedObjects.push(bullet);\n          this.bullets.splice(this.bullets.indexOf(bullet),1)\n        } \n        this.bullets.splice(this.bullets.indexOf(bullet),1)\n      }\n    })\n    this.cities.forEach(city => {\n      city.draw();\n    })\n\n    let allObjects = this.bullets.concat(this.missiles)\n    allObjects.forEach((object) => {\n            object.move();\n        });\n    if (this.explodedObjects.length !== 0){\n      this.explodedObjects.forEach((object) => object.draw())\n    }\n    this.checkCollision();\n    this.gameOver();\n    this.newLevel();\n    this.requestId = requestAnimationFrame(this.renderFrame);\n  }\n  \n  gameOver(){\n    if (this.gunnerLives === 0 || this.cityCount === 0){\n      console.log('gameOver')\n      this.gameFinished = true\n    }\n  }\n  \n  newLevel(){\n    if (this.missileCount === 0 && !this.gameFinished ){\n      console.log('new level reached')\n    }\n  }\n\n  play(){\n    // if (this.gunnerLives === 0 || this.cityCount === 0){\n    //   return this.gameOver()\n    // } else if (this.missileCount === 0){\n    //   return this.newLevel();\n    // }\n    this.renderFrame();\n  }\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0"," // const MovingObject = require('./moving_object')\n\n class Missile {\n  constructor(ctx, xPos, angle, speed) {\n  this.color = 'green';\n  this.xPos = xPos\n  this.originalAngle = angle;\n  this.yPos = 0\n  this.angle = this.originalAngle * Math.PI / 180\n  this.speed = speed;\n  this.radius = 4;\n  this.vx = Math.cos(this.angle) * this.speed;\n  this.vy = Math.sin(this.angle) * this.speed;\n  this.draw = this.draw.bind(this);\n  this.changePosition = this.changePosition.bind(this);\n  this.move = this.move.bind(this);\n  this.ctx = ctx;\n  this.collided = false;\n  this.exploded = false;\n  }\n\n  hasCollided() {\n    this.collided = true;\n  }\n\n  draw() {\n    if (!this.collided && !this.exploded){\n      this.ctx.beginPath();\n      this.ctx.fillStyle = this.color;\n      this.ctx.arc(this.xPos,this.yPos,4, 0, 2 * Math.PI)\n      this.ctx.fill();\n      this.ctx.stroke();\n      this.ctx.closePath();\n    } else if (this.exploded) {\n      this.ctx.beginPath();\n      this.ctx.fillStyle = this.color\n      this.ctx.fillRect(this.xPos,this.yPos, 4, 10)\n      this.ctx.closePath();\n    }\n  }\n\n  exploded(){\n    this.exploded = true;\n  }\n\n  changePosition() {\n    this.yPos += this.vy;\n    this.xPos += this.vx;\n  }\n\n  hasCollidedWith(otherObject){\n    // if ((this.yPos + this.radius) <= (otherObject.yPos + otherObject.radius)) {\n    //   return false;\n    // }  else {\n    //   return true;\n    // }\n      let dx = this.xPos - otherObject.xPos;\n      let dy = this.yPos - otherObject.yPos;\n      let distance = Math.sqrt(dx * dx + dy * dy)\n\n      if (distance < this.radius + otherObject.radius){\n        return true\n      } else {\n        return false\n      }\n  }\n\n  move() {\n    if (!this.exploded) {\n      this.draw();\n      this.changePosition();\n    } else {\n      this.draw();\n    }\n  }\n\n}\n\nexport default Missile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/missile.js\n// module id = 3\n// module chunks = 0","// import Bullet from './gunner'\nimport Bullet from './bullet';\nclass Gunner {\n  constructor(xPos, yPos, radius, ctx){\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.radius = radius;\n    this.ctx = ctx;\n    this.max = 20;\n    this.shoot = this.shoot.bind(this)\n  }\n\n  shoot(endPosX, endPosY ){\n    if (this.max > 0){\n      let bullet = new Bullet (this.ctx, this.xPos, this.yPos, endPosX, endPosY)\n      this.max = this.max - 1;\n      return bullet\n    } else {\n      return new Bullet(this.ctx, 0,0,0,0);\n    }\n  }\n\n  hasCollided(){\n    //dummy function\n  }\n\n  collided(){\n\n  }\n\n  move() {\n\n  }\n\n  draw(){\n    this.ctx.beginPath();\n    this.ctx.fillStyle = 'blue';\n    this.ctx.arc(this.xPos,this.yPos,this.radius, 0, 2 * Math.PI)\n    this.ctx.fill();\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  hasCollidedWith(otherObject){\n      let dx = this.xPos - otherObject.xPos;\n      let dy = this.yPos - otherObject.yPos;\n      let distance = Math.sqrt(dx * dx + dy * dy)\n\n      if (distance < this.radius + otherObject.radius){\n        return true\n      } else {\n        return false\n      }\n  }\n}\n\nexport default Gunner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gunner.js\n// module id = 4\n// module chunks = 0","\nclass City {\n  constructor(xStart, yStart, width, height, color, ctx){\n    this.xStart = xStart;\n    this.yStart = yStart;\n    this.width = width;\n    this.height = height;\n    this.color = color;\n    this.ctx = ctx;\n    this.exploded = false;\n  }\n\n\n  draw(){\n    if (!this.exploded){\n      this.ctx.beginPath()\n      this.ctx.fillStyle = this.color;\n      this.ctx.fillRect(this.xStart, this.yStart, this.width, this.height)\n      this.ctx.closePath();\n    } else {\n      this.ctx.beginPath()\n      this.ctx.fillStyle = 'red';\n      this.ctx.fillRect(this.xStart, this.yStart, this.width, this.height)\n      this.ctx.closePath();\n    }\n  }\n}\n\nexport default City;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/city.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}